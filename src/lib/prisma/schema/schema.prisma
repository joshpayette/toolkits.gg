generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["typedSql", "relationJoins", "driverAdapters"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

model User {
  id                      String                   @id @default(cuid())
  username                String                   @unique
  email                   String                   @unique
  emailVerified           Boolean                  @default(false)
  passwordHash            String
  sessions                Session[]
  passwordResetTokens     PasswordResetToken[]
  emailVerificationTokens EmailVerificationToken[]
  userProfile             UserProfile?
}

model Session {
  id        String   @id
  expiresAt DateTime
  userId    String
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model PasswordResetToken {
  tokenHash String   @unique
  expiresAt DateTime
  userId    String
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)

  @@index([userId])
}

model EmailVerificationToken {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  code      String
  expiresAt DateTime
  email     String
  userId    String
  user      User     @relation(references: [id], fields: [userId], onDelete: Cascade)

  @@index([userId])
}

model UserProfile {
  id          String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  displayName String
  bio         String?
  avatarUrl   String?
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId      String   @unique
}
